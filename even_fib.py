#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.




def fibon(finalvalue):
    """
    lists the fibonacci values up to the final value
    >>> fibon(5)
    [1, 2, 3, 5]

    >>> fibon(21)
    [1, 2, 3, 5, 8, 13, 21]

    """
    start = 1
    fin = 2
    lofb = [1, 2]

    while (start and fin <= finalvalue):
        start  = start + fin
        lofb = lofb + [start]
        
        fin = start + fin
        lofb = lofb + [fin]

    print ( lofb )
    
    loen = []
    for each in lofb:
        if ( each%2 == 0 ):
            loen.append(each)
    print ( loen )

    total = 0
    for each in loen:
        total = total + each

    print ( total )


fibon(4000000)


        
    

